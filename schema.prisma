// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id        String    @id @unique @default(cuid())
  username  String    @unique
  email     String    @unique
  password  String
  role      String
  accounts  Account[]
  sessions  Session[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Brand {
  id        String   @id @unique @default(cuid())
  name      String
  slug      String   @unique
  image     String?
  detail    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Item      Item[]
}

model Product {
  id        String   @id @unique @default(cuid())
  name      String
  slug      String   @unique
  image     String?
  detail    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Item      Item[]
}

model Item {
  id           String         @id @unique @default(cuid())
  name         String
  code         String         @unique
  image        String?
  detail       String?
  quantity     String
  productSlug  String
  Product      Product        @relation(fields: [productSlug], references: [slug], onDelete: Cascade)
  brandSlug    String
  Brand        Brand          @relation(fields: [brandSlug], references: [slug], onDelete: Cascade)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  EntryItem    EntryItem[]
  ConsumedItem ConsumedItem[]
}

model Entry {
  id         String      @id @unique @default(cuid())
  reason     String
  status     String
  detail     String?
  image      String?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  EntryItems EntryItem[]
}

model EntryItem {
  id        String   @id @unique @default(cuid())
  itemCode  String
  Items     Item     @relation(fields: [itemCode], references: [code], onDelete: Cascade)
  entryId   String
  Entry     Entry    @relation(fields: [entryId], references: [id], onDelete: Cascade)
  quantity  String
  status    String   @default("pending")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Consume {
  id            String         @id @unique @default(cuid())
  reason        String
  status        String
  detail        String?
  image         String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  ConsumedItems ConsumedItem[]
}

model ConsumedItem {
  id        String   @id @unique @default(cuid())
  itemCode  String
  Items     Item     @relation(fields: [itemCode], references: [code], onDelete: Cascade)
  consumeId String
  Consume   Consume  @relation(fields: [consumeId], references: [id], onDelete: Cascade)
  quantity  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
